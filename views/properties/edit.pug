extends ../layout/admin

//- * Acá cargamos la hoja de estilos para leaflet
block styles 
    link(rel="stylesheet" href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css")

block contenido
    section.py-3
        h1.text-5xl.my-10.font-extrabold.text-center Bienes 
            span.font-normal Raíces
        h2.text-center.text-4xl.font-extrabold= view 

        if errors
            div(class="max-w-md mx-auto my-10")
                each error in errors
                    p(class="bg-red-600 text-white uppercase text-xs text-center p-2 mb-1 font-bold")= error.msg

        div(class="bg-white shadow py-8 px-4 rounded mx-auto max-w-4xl my-10 md:px-10")

            //-*space-y-8 separa el contenido del formulario y no usar margin-top/bottom en cada contenedor hijo.
            form(method="POST" action="/properties/create").space-y-8
                input(type="hidden" name="_csrf" value=csrfToken)
                div.space-y-5
                    h3.text-lg.font-semibold.text-gray-900 Información General
                    p.text-gray-600 Añade información sobre la propiedad en venta.

                    div
                        label.block.text-base.text-gray-400.mb-2.font-bold(for="title") Título de tu anuncio   
                        input#title.w-full.p-3.border.border-gray-300.rounded-md.placeholder-gray-300(placeholder="Título de tu propiedad, ej. Casa en la playa."
                        type="text" name="title" value=data.title ? data.title : "")
                    
                    div
                        label(class="block text-sm uppercase text-gray-500 mb-3 font-bold" for="description") Descripción
                        textarea#description.w-full.p-3.border.border-gray-300.rounded-md.placeholder-gray-300(placeholder="Descripción."
                        name="description")= data.description ? data.description : ""
                    
                    //- * md es media query en tamaño mediano
                    div(class="md:flex md:gap-4 space-y-5 md:space-y-0")
                        div(class="md:w-1/3")
                            label.block.text-base.text-gray-400.mb-2.font-bold(for="category") Categoría   
                            select#category.w-full.p-3.border.border-gray-300.rounded-md(name="category")
                                option(value="") - Seleccione -
                                each category in categories
                                    //- * La primera vez, recién se carga el formulario category(selected) será null. 
                                    //- * Pero cuando el usuario selecciona una categoría, entra al primer ternario (data.category)
                                    //- * Ahora, para mantener la opción que el usuario seleccionó, comprobamos que esa opción que se seleccionó previamente
                                    //- * es completamente igual a la categoría que se está imprimiendo en ese momento, le paso true, y si no es igual le paso false
                                    option(value=category.id selected= data.category ? data.category === category.id ? true : false : null)= category.name
                        
                        div(class="md:w-1/3")
                            label.block.text-base.text-gray-400.mb-2.font-bold(for="price") precio   
                            select#price.w-full.p-3.border.border-gray-300.rounded-md(name="price")
                                option(value="") - Seleccione -
                                each price in prices
                                    option(value=price.id selected= data.price ? data.price === price.id ? true : false : null)= price.name
                        
                        div(class="md:w-1/3")
                            label.block.text-base.text-gray-400.mb-2.font-bold(for="strata") Estrato   
                            select#strata.w-full.p-3.border.border-gray-300.rounded-md(name="strata")
                                option(value="") - Seleccione -
                                - let stratum = 1;
                                    while stratum <= 6 
                                       option(value=stratum selected= data.strata ? data.strata === stratum ? true : false : null) #{stratum++}
                    
                    div(class="md:flex md:gap-4 space-y-5 md:space-y-0")
                        div(class="md:w-1/3")
                            label.block.text-base.text-gray-400.mb-2.font-bold(for="rooms") Habitaciones   
                            select#rooms.w-full.p-3.border.border-gray-300.rounded-md(name="rooms")
                                option(value="") - Seleccione -
                                - let room = 1;
                                    while room <= 10 
                                        option(value=room selected= data.rooms ? data.rooms === room ? true : false : null) #{room++}

                        div(class="md:w-1/3")
                            label.block.text-base.text-gray-400.mb-2.font-bold(for="parking") Estacionamiento   
                            select#parking.w-full.p-3.border.border-gray-300.rounded-md(name="parking")
                                option(value="") - Seleccione -
                                - let carPark = 1;
                                    while carPark <= 10 
                                        option(value=carPark selected= data.parking ? data.parking === carPark ? true : false : null) #{carPark++}
                        
                        div(class="md:w-1/3")
                            label.block.text-base.text-gray-400.mb-2.font-bold(for="toilet") Baños
                            select#toilet.w-full.p-3.border.border-gray-300.rounded-md(name="toilet")
                                option(value="") - Seleccione -
                                - let baths = 1;
                                    while baths <= 10 
                                        option(value=baths selected= data.toilet ? data.toilet === baths ? true : false : null) #{baths++}

                div.border-gray-200.border-t.py-5.space-y-5
                    h3.text-lg.font-semibold.text-gray-900 Ubicación
                    p.text-gray-600 Ubica la propiedad en el mapa.
                    #map.h-96

                    div
                        p.street= data.street ? data.street : ""

                    input(type="hidden" name="street" id="street" value= data.street ? data.street : "")
                    input(type="hidden" name="lat" id="lat" value= data.lat ? data.lat : "")
                    input(type="hidden" name="lng" id="lng" value= data.lng ? data.lng : "")
                
                input(class="w-full py-3 bg-indigo-600 hover:bg-indigo-700 rounded-md text-white font-bold uppercase cursor-pointer" type="submit" value="Añadir Imagen")

//- * leaflet es una alternativa gratis a google maps.
//- * esri-leaflet es una librería que nos permite ingresar a información de las calles cuando le pasamos ciertas coordenadas.
//- * esri-leaflet-geocoder y leaflet-geosearch hacen lo mismo que esri-leaflet.
block scripts 
    script(src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js")
    script(src="https://unpkg.com/esri-leaflet@3.0.8/dist/esri-leaflet.js")
    script(src="https://unpkg.com/esri-leaflet-geocoder@2.2.13/dist/esri-leaflet-geocoder.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/leaflet-geosearch/2.7.0/bundle.min.js")
    script(src="/js/map.js")           

//- * Instalar y configurar webpack - Toma los archivos de JS y los compila en archivos estáticos.
//- * npm i -D webpack webpack-cli
//- * crear webpack.config.js
//- * crear src, dentro js y acá irá el mapa
        